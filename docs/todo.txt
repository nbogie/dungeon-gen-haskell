TODO
* remove overlapping rooms, or at least those with identical centres, when snapped.  (take the bigger one)?  Graph wants a set of nodes, as does triangulation.
* don't need to preserve velocity between iterations.  apply a force, have it cause movement, then consider everything stuck again.  So we can also get rid of drag, and use higher velocities, once off.
* remove bug where some of the (sufficiently sized) rooms are apprently ignored from the delauney triangulation or its subsequent conversion to graph or its conversion to picture.  This is likely an effect of me not being strict with uniqueness constraints in the "graphs"
.
DONE
* After MST is made from triangulation edges, add ~15% of the unused edges to the result graph, so we have a few cycles. (point #8 of original writeup)

* Graph A
* MST with prim's algorithm

Other idea
* An alternative approach would be to distribute the rooms with much space, and then apply attractive forces to shrink the network
